{"ast":null,"code":"var _jsxFileName = \"/Users/saddafafrinkhan/Projects/Mine/React/chargepointfinder/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { icon } from \"leaflet\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n};\n\nfunction success(pos) {\n  var crd = pos.coords;\n  console.log(\"Your current position is:\");\n  console.log(`Latitude : ${crd.latitude}`);\n  console.log(`Longitude: ${crd.longitude}`);\n  console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errors(err) {\n  alert('error');\n  console.warn(`ERROR(${err.code}): ${err.message}`);\n}\n\nexport default function App() {\n  // componentDidMount() {\n  //   if (navigator.geolocation) {\n  //     navigator.permissions\n  //         .query({ name: \"geolocation\" })\n  //         .then(function (result) {\n  //           if (result.state === \"granted\") {\n  //             console.log(result.state);\n  //             //If granted then you can directly call your function here\n  //\n  //             navigator.geolocation.getCurrentPosition(success);\n  //           } else if (result.state === \"prompt\") {\n  //             navigator.geolocation.getCurrentPosition(success, errors, options);\n  //           } else if (result.state === \"denied\") {\n  //             //If denied then you have to show instructions to enable location\n  //           }\n  //           result.onchange = function () {\n  //             console.log(result.state);\n  //           };\n  //         });\n  //   } else {\n  //     alert(\"Sorry Not available!\");\n  //   }\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GeoLocation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n} // export default App;\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/saddafafrinkhan/Projects/Mine/React/chargepointfinder/src/App.js"],"names":["MapContainer","Marker","Popup","TileLayer","icon","React","Component","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","console","log","latitude","longitude","accuracy","errors","err","alert","warn","code","message","App"],"mappings":";;AACA,OAAO,WAAP;AACA,SAAQA,YAAR,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,SAArC,QAAqD,eAArD;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,IAAIC,OAAO,GAAG;AACZC,EAAAA,kBAAkB,EAAE,IADR;AAEZC,EAAAA,OAAO,EAAE,IAFG;AAGZC,EAAAA,UAAU,EAAE;AAHA,CAAd;;AAKA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaH,GAAG,CAACI,QAAS,EAAvC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaH,GAAG,CAACK,SAAU,EAAxC;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeH,GAAG,CAACM,QAAS,UAAzC;AACD;;AAED,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnBC,EAAAA,KAAK,CAAC,OAAD,CAAL;AACAP,EAAAA,OAAO,CAACQ,IAAR,CAAc,SAAQF,GAAG,CAACG,IAAK,MAAKH,GAAG,CAACI,OAAQ,EAAhD;AACD;;AAGD,eAAe,SAASC,GAAT,GAAc;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,sBACI;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,C,CAED;;KAlCwBA,G","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {MapContainer, Marker, Popup, TileLayer} from \"react-leaflet\";\nimport {icon} from \"leaflet\";\nimport React, { Component } from \"react\";\n\n\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0,\n};\nfunction success(pos) {\n  var crd = pos.coords;\n  console.log(\"Your current position is:\");\n  console.log(`Latitude : ${crd.latitude}`);\n  console.log(`Longitude: ${crd.longitude}`);\n  console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errors(err) {\n  alert('error')\n  console.warn(`ERROR(${err.code}): ${err.message}`);\n}\n\n\nexport default function App(){\n\n  // componentDidMount() {\n  //   if (navigator.geolocation) {\n  //     navigator.permissions\n  //         .query({ name: \"geolocation\" })\n  //         .then(function (result) {\n  //           if (result.state === \"granted\") {\n  //             console.log(result.state);\n  //             //If granted then you can directly call your function here\n  //\n  //             navigator.geolocation.getCurrentPosition(success);\n  //           } else if (result.state === \"prompt\") {\n  //             navigator.geolocation.getCurrentPosition(success, errors, options);\n  //           } else if (result.state === \"denied\") {\n  //             //If denied then you have to show instructions to enable location\n  //           }\n  //           result.onchange = function () {\n  //             console.log(result.state);\n  //           };\n  //         });\n  //   } else {\n  //     alert(\"Sorry Not available!\");\n  //   }\n  // }\n\n    return (\n        <div>\n          <h2>GeoLocation</h2>\n        </div>\n    );\n\n}\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}