{"ast":null,"code":"var _jsxFileName = \"/Users/saddafafrinkhan/Projects/Mine/React/chargepointfinder/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { icon } from \"leaflet\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n};\n\nfunction success(pos) {\n  var crd = pos.coords;\n  console.log(\"Your current position is:\");\n  console.log(`Latitude : ${crd.latitude}`);\n  console.log(`Longitude: ${crd.longitude}`);\n  console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errors(err) {\n  alert('error');\n  console.warn(`ERROR(${err.code}): ${err.message}`);\n}\n\nexport default function App() {\n  if (navigator.geolocation) {\n    navigator.permissions.query({\n      name: \"geolocation\"\n    }).then(function (result) {\n      if (result.state === \"granted\") {\n        console.log(result.state); //If granted then you can directly call your function here\n\n        navigator.geolocation.getCurrentPosition(success);\n      } else if (result.state === \"prompt\") {\n        navigator.geolocation.getCurrentPosition(success, errors, options);\n      } else if (result.state === \"denied\") {//If denied then you have to show instructions to enable location\n      }\n\n      result.onchange = function () {\n        console.log(result.state);\n      };\n    });\n  } else {\n    alert(\"Sorry Not available!\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [51.505, -0.09],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 38\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n} // export default App;\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/saddafafrinkhan/Projects/Mine/React/chargepointfinder/src/App.js"],"names":["MapContainer","Marker","Popup","TileLayer","icon","React","Component","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","console","log","latitude","longitude","accuracy","errors","err","alert","warn","code","message","App","navigator","geolocation","permissions","query","name","then","result","state","getCurrentPosition","onchange"],"mappings":";;AACA,OAAO,WAAP;AACA,SAAQA,YAAR,EAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,SAArC,QAAqD,eAArD;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,IAAIC,OAAO,GAAG;AACZC,EAAAA,kBAAkB,EAAE,IADR;AAEZC,EAAAA,OAAO,EAAE,IAFG;AAGZC,EAAAA,UAAU,EAAE;AAHA,CAAd;;AAKA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaH,GAAG,CAACI,QAAS,EAAvC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,cAAaH,GAAG,CAACK,SAAU,EAAxC;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeH,GAAG,CAACM,QAAS,UAAzC;AACD;;AAED,SAASC,MAAT,CAAgBC,GAAhB,EAAqB;AACnBC,EAAAA,KAAK,CAAC,OAAD,CAAL;AACAP,EAAAA,OAAO,CAACQ,IAAR,CAAc,SAAQF,GAAG,CAACG,IAAK,MAAKH,GAAG,CAACI,OAAQ,EAAhD;AACD;;AAGD,eAAe,SAASC,GAAT,GAAc;AAEzB,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,IAAAA,SAAS,CAACE,WAAV,CACKC,KADL,CACW;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADX,EAEKC,IAFL,CAEU,UAAUC,MAAV,EAAkB;AACtB,UAAIA,MAAM,CAACC,KAAP,KAAiB,SAArB,EAAgC;AAC9BnB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAM,CAACC,KAAnB,EAD8B,CAE9B;;AAEAP,QAAAA,SAAS,CAACC,WAAV,CAAsBO,kBAAtB,CAAyCxB,OAAzC;AACD,OALD,MAKO,IAAIsB,MAAM,CAACC,KAAP,KAAiB,QAArB,EAA+B;AACpCP,QAAAA,SAAS,CAACC,WAAV,CAAsBO,kBAAtB,CAAyCxB,OAAzC,EAAkDS,MAAlD,EAA0Db,OAA1D;AACD,OAFM,MAEA,IAAI0B,MAAM,CAACC,KAAP,KAAiB,QAArB,EAA+B,CACpC;AACD;;AACDD,MAAAA,MAAM,CAACG,QAAP,GAAkB,YAAY;AAC5BrB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAM,CAACC,KAAnB;AACD,OAFD;AAGD,KAhBL;AAiBD,GAlBD,MAkBO;AACLZ,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;;AAED,sBACI;AAAA,2BACE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAE,CAAC,MAAD,EAAS,CAAC,IAAV,CAAtB;AAAuC,MAAA,IAAI,EAAE,EAA7C;AAAiD,MAAA,eAAe,EAAE,KAAlE;AAAA,8BACE,QAAC,SAAD;AACI,QAAA,WAAW,EAAC,0EADhB;AAEI,QAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,CAAC,IAAV,CAAlB;AAAA,+BACE,QAAC,KAAD;AAAA,2DACuB;AAAA;AAAA;AAAA;AAAA,kBADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,C,CAED;;KA1CwBI,G","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {MapContainer, Marker, Popup, TileLayer} from \"react-leaflet\";\nimport {icon} from \"leaflet\";\nimport React, { Component } from \"react\";\n\n\nvar options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0,\n};\nfunction success(pos) {\n  var crd = pos.coords;\n  console.log(\"Your current position is:\");\n  console.log(`Latitude : ${crd.latitude}`);\n  console.log(`Longitude: ${crd.longitude}`);\n  console.log(`More or less ${crd.accuracy} meters.`);\n}\n\nfunction errors(err) {\n  alert('error')\n  console.warn(`ERROR(${err.code}): ${err.message}`);\n}\n\n\nexport default function App(){\n\n    if (navigator.geolocation) {\n      navigator.permissions\n          .query({ name: \"geolocation\" })\n          .then(function (result) {\n            if (result.state === \"granted\") {\n              console.log(result.state);\n              //If granted then you can directly call your function here\n\n              navigator.geolocation.getCurrentPosition(success);\n            } else if (result.state === \"prompt\") {\n              navigator.geolocation.getCurrentPosition(success, errors, options);\n            } else if (result.state === \"denied\") {\n              //If denied then you have to show instructions to enable location\n            }\n            result.onchange = function () {\n              console.log(result.state);\n            };\n          });\n    } else {\n      alert(\"Sorry Not available!\");\n    }\n\n    return (\n        <div>\n          <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            <Marker position={[51.505, -0.09]}>\n              <Popup>\n                A pretty CSS3 popup. <br /> Easily customizable.\n              </Popup>\n            </Marker>\n          </MapContainer>\n        </div>\n    );\n\n}\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}